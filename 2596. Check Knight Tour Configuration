class Solution {
    public boolean checkValidGrid(int[][] grid) {
        return isValid(grid, 0, 0, grid.length,0);
    }

    public boolean isValid(int[][]ches,int r,int c,int n,int expValue){
        int m = expValue;
        if (r < 0 || c < 0 || r >= n || c >= n || ches[r][c] != m) 
        return false;

        if (m == n * n - 1) return true;  

        return isValid(ches, r - 2, c + 1,n, m + 1) ||
               isValid(ches, r - 1, c + 2,n, m + 1) ||
               isValid(ches, r + 1, c + 2,n, m + 1) ||
               isValid(ches, r + 2, c + 1,n, m + 1) ||
               isValid(ches, r + 2, c - 1,n, m + 1) ||
               isValid(ches, r + 1, c - 2,n, m + 1) ||
               isValid(ches, r - 1, c - 2,n, m + 1) ||
               isValid(ches, r - 2, c - 1,n, m + 1);
    }
}
