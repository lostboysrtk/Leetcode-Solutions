/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
        if(head==null){
            return head;
        }
        Node curr=head;
        //flattening the child nodes
        while(curr!=null){
            if(curr.child!=null){
            Node next = curr.next;
            curr.next = flatten(curr.child);
            curr.next.prev=curr;
            curr.child=null;

            //finding tail
            while(curr.next!=null){
                curr=curr.next;
            }
            //connect with tail
            if(next!=null){
                curr.next=next;
                next.prev=curr;
            }
            }
            curr=curr.next;
        }
        return head;
    }
}
